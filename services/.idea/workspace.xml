<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d90d045e-a3ee-4242-8032-adfffff9d844" name="变更" comment="">
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/app.json" beforeDir="false" afterPath="$PROJECT_DIR$/../app/miniprogram/app.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.json" beforeDir="false" afterPath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.wxml" beforeDir="false" afterPath="$PROJECT_DIR$/../app/miniprogram/pages/index/index.wxml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/login/login.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../app/miniprogram/pages/login/login.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/test/test.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/test/test.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/miniprogram/pages/test/test.wxml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../app/project.config.json" beforeDir="false" afterPath="$PROJECT_DIR$/../app/project.config.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/config/menu.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/config/menu.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/config/router.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/config/router.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/layouts/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/layouts/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/buy/index.module.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/buy/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/detail/index.module.scss" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/pages/detail/index.module.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/detail/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/pages/detail/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/home/index.module.scss" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/pages/home/index.module.scss" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/home/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/pages/home/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/pages/login/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/pages/login/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../h5/src/services/user.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../h5/src/services/user.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/routers/api/v1/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/routers/api/v1/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/routers/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/routers/router.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2ApZpGb10UjTBCkdBBbNPj4YnU1" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="RunManager" selected="Go 构建.go build main.go">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="services" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="services" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build user.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="services" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/routers/api/v1/user.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="services" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build main.go" />
        <item itemvalue="Go 构建.go build user.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>